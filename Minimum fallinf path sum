class Solution {
public:
    int sol(vector<vector<int>>& arr,vector<vector<int>>& dp,int i,int j,int n){
          if(j==-1 or j==n){
            return INT_MAX;
          }
          if(i==n-1){
            return dp[i][j]=arr[i][j];
          }
         
          if(dp[i][j]!=INT_MAX){
            return dp[i][j];
          }
          int d=sol(arr,dp,i+1,j,n);
          int l=sol(arr,dp,i+1,j-1,n);
          int r=sol(arr,dp,i+1,j+1,n);
          return dp[i][j]=arr[i][j]+min(d,min(l,r));
    }
    int minFallingPathSum(vector<vector<int>>& arr) {
        int i=0;
        int j=0;
        int n=arr.size();
        vector<vector<int>> dp(n,vector<int>(n,INT_MAX));
        int ans=INT_MAX;
        for(int i=0;i<n;i++){
              int a=sol(arr,dp,0,i,n);
              ans=min(a,ans);
        }
        return ans;
    }
};
