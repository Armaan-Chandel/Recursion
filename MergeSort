class Solution {
public:
    vector<int> sortArray(vector<int>& arr) {
        int l=0;
        int r=arr.size()-1;
        mergeSort(arr,l,r);
        return arr;
    }
    void mergeSort(vector<int>& arr, int l, int r) {
        if(l<r){
            int mid=l+(r-l)/2;
            mergeSort(arr,l,mid);
            mergeSort(arr,mid+1,r);
            merge(arr,l,mid,r);
        }
    }
    void merge(vector<int>& arr,int l,int mid,int r){
        vector<int> a,b;
        int n2=r-mid;
        int n1=mid-l+1;
        for(int i=0;i<n1;i++){
            a.push_back(arr[i+l]);
        }
        for(int i=0;i<n2;i++){
            b.push_back(arr[i+mid+1]);
        }
        vector<int> c;
        int i=0,j=0;
        int k=l;
        while(i!=n1 and j!=n2){
            if(a[i]<=b[j]){
                arr[k++]=(a[i]);
                i++;
            }
            else{
                arr[k++]=(b[j]);
                j++;
                    
           }
        }
        if(i!=n1){
            while(i!=n1){
                arr[k++]=(a[i++]);
            }
        }
        
        if(j!=n2){
            while(j!=n2){
                arr[k++]=(b[j++]);
            }
        }
        
    }
    
};
