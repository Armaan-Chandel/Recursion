class Solution {
public:
    bool sol(vector<int>& arr,int i,int tar,vector<vector<int>>& dp){
        if(tar==0){
            return true;
        }
        if(i==0){
            return arr[i]==tar;
        }
        if(dp[i][tar]!=-1){
            return dp[i][tar];
        }
        bool no=sol(arr,i-1,tar,dp);
        bool yes=false;
        if(tar>=arr[i]){
            yes=sol(arr,i-1,tar-arr[i],dp);
        }
        return dp[i][tar]=(yes or no);
    }
    bool canPartition(vector<int>& nums) {
        int n=nums.size();
        int i=n-1;
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=nums[i];
        }
        if(sum%2!=0){
            return false;
        }
        int tar=sum/2;
        vector<vector<int>> ap(n,vector<int>(tar+1,-1));
        return sol(nums,i,tar,ap);
       }
};
